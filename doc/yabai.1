'\" t
.\"     Title: yabai
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2019-12-12
.\"    Manual: Yabai Manual
.\"    Source: Yabai
.\"  Language: English
.\"
.TH "YABAI" "1" "2019-12-12" "Yabai" "Yabai Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
.sp
yabai
.SH "SYNOPSIS"
.sp
\fByabai\fP [\fB\-v\fP,\fB\-\-version\fP|\fB\-V\fP,\fB\-\-verbose\fP|\fB\-m\fP,\fB\-\-message\fP \fImsg\fP|\fB\-c\fP,\fB\-\-config\fP \fIconfig_file\fP|\fB\-\-install\-sa\fP|\fB\-\-uninstall\-sa\fP|\fB\-\-check\-sa\fP|\fB\-\-load\-sa\fP]
.SH "DESCRIPTION"
.sp
\fByabai\fP is a tiling window manager for macOS based on binary space partitioning.
.SH "OPTIONS"
.sp
\fB\-v\fP, \fB\-\-version\fP
.RS 4
Print the version and exit.
.RE
.sp
\fB\-V\fP, \fB\-\-verbose\fP
.RS 4
Output debug information to stdout.
.RE
.sp
\fB\-m\fP, \fB\-\-message\fP \fI<msg>\fP
.RS 4
Send message to a running instance of yabai.
.RE
.sp
\fB\-c\fP, \fB\-\-config\fP \fI<config_file>\fP
.RS 4
Use the specified configuration file.
.RE
.sp
\fB\-\-install\-sa\fP
.RS 4
Install scripting\-addition. Must be run as root. Path is /System/Library/ScriptingAdditions on macOS High Sierra, and /Library/ScriptingAdditions on Mojave and newer.
.RE
.sp
\fB\-\-uninstall\-sa\fP
.RS 4
Uninstall scripting\-addition. Must be run as root. Path is /System/Library/ScriptingAdditions on macOS High Sierra, and /Library/ScriptingAdditions on Mojave and newer.
.RE
.sp
\fB\-\-check\-sa\fP
.RS 4
Returns a zero exit\-code if the latest version of the scripting\-addition is installed.
.RE
.sp
\fB\-\-load\-sa\fP
.RS 4
Loads the scripting\-addition into Dock.app.
.RE
.SH "DEFINITIONS"
.sp
.if n .RS 4
.nf
DIR_SEL     := north | east | south | west

WINDOW_SEL  := prev | next | first | last | recent | mouse | largest | smallest | DIR_SEL | window id

DISPLAY_SEL := prev | next | first | last | recent | arrangement index (1\-based)

SPACE_SEL   := prev | next | first | last | recent | mission\-control index (1\-based) | LABEL

FLOAT_SEL   := 0 < value <= 1.0

BOOL_SEL    := on | off

REGEX       := \c
.URL "https://www.gnu.org/software/findutils/manual/html_node/find_html/posix_002dextended\-regular\-expression\-syntax.html" "POSIX extended regular expression syntax" ""

LABEL       := arbitrary string/text used as an identifier
.fi
.if n .RE
.SH "DOMAINS"
.SS "Config"
.SS "General Syntax"
.sp
yabai \-m config <global setting> [<value>]
.RS 4
Get or set the value of <global setting>.
.RE
.sp
yabai \-m config [\-\-space \fI<mission\-control index>\fP] <space setting> [<value>]
.RS 4
Get or set the value of <space setting>.
.RE
.SS "Global Settings"
.sp
Colors are in the form \fI#AARRGGBB\fP.
.sp
\fIdebug_output\fP
.RS 4
Enable output of debug information to stdout.
.RE
.sp
\fIstatus_bar\fP
.RS 4
Enable custom status bar.
.RE
.sp
\fIstatus_bar_text_font\fP
.RS 4
Specify name, style and size of font to use for drawing text. Format: \fI<font_family>:<font_style>:<font_size>\fP. Use \fIFont Book.app\fP to identify the correct name.
.RE
.sp
\fIstatus_bar_icon_font\fP
.RS 4
Specify name, style and size of font to use for drawing icon symbols. Format: \fI<font_family>:<font_style>:<font_size>\fP. Use \fIFont Book.app\fP to identify the correct name.
.RE
.sp
\fIstatus_bar_background_color\fP
.RS 4
Color to use for drawing status bar background.
.RE
.sp
\fIstatus_bar_foreground_color\fP
.RS 4
Color to use for drawing status bar elements.
.RE
.sp
\fIstatus_bar_space_icon_strip\fP
.RS 4
Specify symbols separated by whitespace to be used for visualizing spaces.
.RE
.sp
\fIstatus_bar_power_icon_strip\fP
.RS 4
Specify two symbols separated by whitespace. The first symbol represents battery power and the second symbol indicates AC.
.RE
.sp
\fIstatus_bar_space_icon\fP
.RS 4
Specify a general symbol to use for any given space that does not have a match in \fIstatus_bar_space_icon_strip\fP.
.RE
.sp
\fIstatus_bar_clock_icon\fP
.RS 4
Specify a symbol to represent the current time.
.RE
.sp
\fImouse_follows_focus\fP
.RS 4
When focusing a window, put the mouse at its center.
.RE
.sp
\fIfocus_follows_mouse\fP
.RS 4
Focus the window under the mouse. Accept the following values: \fBautofocus\fP, \fBautoraise\fP, \fBoff\fP.
.RE
.sp
\fIwindow_placement\fP
.RS 4
Specify whether managed windows should become the first or second leaf\-node. Accept the following values: \fBfirst_child\fP, \fBsecond_child\fP.
.RE
.sp
\fIwindow_topmost\fP
.RS 4
Make floating windows stay on top.
.RE
.sp
\fIwindow_opacity\fP
.RS 4
Enable opacity for windows.
.RE
.sp
\fIwindow_opacity_duration\fP
.RS 4
Duration of transition between active / normal opacity.
.RE
.sp
\fIwindow_shadow\fP
.RS 4
Draw shadow for windows. Accept the following values: \fBon\fP, \fBfloat\fP, \fBoff\fP.
.RE
.sp
\fIwindow_border\fP
.RS 4
Draw border for windows.
.RE
.sp
\fIwindow_border_placement\fP
.RS 4
Position/draw\-mode of window border. Accept the following values: \fBexterior\fP, \fBinterior\fP, \fBinset\fP.
.RE
.sp
\fIwindow_border_width\fP
.RS 4
Width of window borders.
.RE
.sp
\fIwindow_border_radius\fP
.RS 4
Radius of window border corners.
.RE
.sp
\fIactive_window_border_topmost\fP
.RS 4
Make the active border stay on top of other windows.
.RE
.sp
\fIactive_window_border_color\fP
.RS 4
Color of the border of the focused window.
.RE
.sp
\fInormal_window_border_color\fP
.RS 4
Color of the border of an unfocused window.
.RE
.sp
\fIinsert_window_border_color\fP
.RS 4
Color of the \fBwindow \-\-insert\fP message selection.
.RE
.sp
\fIactive_window_opacity\fP
.RS 4
Opacity of the focused window.
.RE
.sp
\fInormal_window_opacity\fP
.RS 4
Opacity of an unfocused window.
.RE
.sp
\fIsplit_ratio\fP
.RS 4
Default split ratio.
.RE
.sp
\fIauto_balance\fP
.RS 4
Balance the window tree upon change, so that all windows occupy the same area.
.RE
.sp
\fImouse_modifier\fP
.RS 4
Keyboard modifier used for moving and resizing windows. Accept the following values: \fBcmd\fP, \fBalt\fP, \fBshift\fP, \fBctrl\fP, \fBfn\fP.
.RE
.sp
\fImouse_action1\fP, \fImouse_action2\fP
.RS 4
Action performed when pressing \fImouse_modifier\fP + \fIbutton<n>\fP. Accept the following values: \fBmove\fP, \fBresize\fP.
.RE
.SS "Space Settings"
.sp
\fIlayout\fP
.RS 4
Set the layout of the selected space. Accept the following values: \fBbsp\fP, \fBfloat\fP.
.RE
.sp
\fItop_padding\fP, \fIbottom_padding\fP, \fIleft_padding\fP, \fIright_padding\fP
.RS 4
Padding added at the sides of the selected space.
.RE
.sp
\fIwindow_gap\fP
.RS 4
Size of the gap that separates windows for the selected space.
.RE
.SS "Display"
.SS "General Syntax"
.sp
yabai \-m display [\fI<DISPLAY_SEL\fP>] \fI<COMMAND>\fP
.SS "COMMAND"
.sp
\fB\-\-focus\fP \fI<DISPLAY_SEL>\fP
.RS 4
Focus the given display.
.RE
.SS "Space"
.SS "General Syntax"
.sp
yabai \-m space [\fI<SPACE_SEL>\fP] \fI<COMMAND>\fP
.SS "COMMAND"
.sp
\fB\-\-focus\fP \fI<SPACE_SEL>\fP
.RS 4
Focus the given space.
.RE
.sp
\fB\-\-create\fP
.RS 4
Create a new space on the display of the selected space.
.RE
.sp
\fB\-\-destroy\fP
.RS 4
Remove the selected space.
.RE
.sp
\fB\-\-move\fP \fIprev|next\fP
.RS 4
Swap position of the selected space with the prev/next space.
.RE
.sp
\fB\-\-display\fP \fI<DISPLAY_SEL>\fP
.RS 4
Send the selected space to the given display.
.RE
.sp
\fB\-\-balance\fP
.RS 4
Adjust the split ratios of the selected space so that all windows occupy the same area.
.RE
.sp
\fB\-\-mirror\fP \fIx\-axis|y\-axis\fP
.RS 4
Flip the tree of the selected space.
.RE
.sp
\fB\-\-rotate\fP \fI90|180|270\fP
.RS 4
Rotate the tree of the selected space.
.RE
.sp
\fB\-\-padding\fP \fIabs|rel:<top>:<bottom>:<left>:<right>\fP
.RS 4
Padding added at the sides of the selected space.
.RE
.sp
\fB\-\-gap\fP \fIabs|rel:<gap>\fP
.RS 4
Size of the gap that separates windows on the selected space.
.RE
.sp
\fB\-\-toggle\fP \fIpadding|gap|mission\-control|show\-desktop\fP
.RS 4
Toggle space setting on or off for the selected space.
.RE
.sp
\fB\-\-layout\fP \fIbsp|float\fP
.RS 4
Set the layout of the selected space.
.RE
.sp
\fB\-\-label\fP \fI<LABEL>\fP
.RS 4
Label the selected space, allowing that label to be used as an alias in commands that take a \f(CRSPACE_SEL\fP parameter.
.RE
.SS "Window"
.SS "General Syntax"
.sp
yabai \-m window [\fI<WINDOW_SEL>\fP] \fI<COMMAND>\fP
.SS "COMMAND"
.sp
\fB\-\-focus\fP \fI<WINDOW_SEL>\fP
.RS 4
Focus the given window.
.RE
.sp
\fB\-\-swap\fP \fI<WINDOW_SEL>\fP
.RS 4
Swap position of the selected window and the given window.
.RE
.sp
\fB\-\-warp\fP \fI<WINDOW_SEL>\fP
.RS 4
Re\-insert the selected window, splitting the given window.
.RE
.sp
\fB\-\-insert\fP \fI<DIR_SEL>\fP
.RS 4
Set the splitting area of the selected window. If the current splitting area matchesÂ \fIDIR_SEL\fP, the action will be undone.
.RE
.sp
\fB\-\-grid\fP \fI<rows>:<cols>:<start\-x>:<start\-y>:<width>:<height>\fP
.RS 4
Set the frame of the selected window based on a self\-defined grid.
.RE
.sp
\fB\-\-move\fP \fIabs|rel:<dx>:<dy>\fP
.RS 4
If type is \fIrel\fP the selected window is moved by \fIdx\fP pixels horizontally and \fIdy\fP pixels vertically, otherwise \fIdx\fP and \fIdy\fP will become its new position.
.RE
.sp
\fB\-\-resize\fP \fItop|left|bottom|right|top_left|top_right|bottom_right|bottom_left|abs:<dx>:<dy>\fP
.RS 4
Resize the selected window by moving the given handle \fIdx\fP pixels horizontally and \fIdy\fP pixels vertically. If handle is \fIabs\fP the new size will be \fIdx\fP width and \fIdy\fP height.
.RE
.sp
\fB\-\-ratio\fP \fIrel|abs:<dr>\fP
.RS 4
If type is \fIrel\fP the split ratio of the selected window is changed by \fIdr\fP, otherwise \fIdr\fP will become the new split ratio. A positive/negative delta will increase/decrease the size of the left\-child.
.RE
.sp
\fB\-\-toggle\fP \fIfloat|sticky|topmost|pip|shadow|split|border|zoom\-parent|zoom\-fullscreen|native\-fullscreen|expose\fP
.RS 4
Toggle the given property of the selected window.
.RE
.sp
\fB\-\-display\fP \fI<DISPLAY_SEL>\fP
.RS 4
Send the selected window to the given display.
.RE
.sp
\fB\-\-space\fP \fI<SPACE_SEL>\fP
.RS 4
Send the selected window to the given space.
.RE
.sp
\fB\-\-close\fP
.RS 4
Closes the selected window. Only works on windows that provide a close button in its titlebar.
.RE
.SS "Query"
.SS "General Syntax"
.sp
yabai \-m query \fI<COMMAND>\fP [\fI<ARGUMENT>\fP]
.SS "COMMAND"
.sp
\fB\-\-displays\fP
.RS 4
Retrieve information about displays.
.RE
.sp
\fB\-\-spaces\fP
.RS 4
Retrieve information about spaces.
.RE
.sp
\fB\-\-windows\fP
.RS 4
Retrieve information about windows.
.RE
.SS "ARGUMENT"
.sp
\fB\-\-display\fP [\fI<DISPLAY_SEL>\fP]
.RS 4
Constrain matches to the selected display.
.RE
.sp
\fB\-\-space\fP [\fI<SPACE_SEL>\fP]
.RS 4
Constrain matches to the selected space.
.RE
.sp
\fB\-\-window\fP [\fI<WINDOW_SEL>\fP]
.RS 4
Constrain matches to the selected window.
.RE
.SS "Rule"
.SS "General Syntax"
.sp
yabai \-m rule \fI<COMMAND>\fP
.SS "COMMAND"
.sp
\fB\-\-add [\fI<ARGUMENT>\fP]\fP
.RS 4
Add a new rule.
.RE
.sp
\fB\-\-remove \fI<LABEL>\fP\fP
.RS 4
Remove an existing rule with the given label.
.RE
.SS "ARGUMENT"
.sp
\fBlabel=\fI<LABEL>\fP\fP
.RS 4
Label used to identify the rule with a unique name
.RE
.sp
\fBapp=\fI<REGEX>\fP\fP
.RS 4
Name of application.
.RE
.sp
\fBtitle=\fI<REGEX>\fP\fP
.RS 4
Title of window.
.RE
.sp
\fBdisplay=\fI[^]<arrangement index>\fP\fP
.RS 4
Send window to display. If \fI^\fP is present, follow focus.
.RE
.sp
\fBspace=\fI[^]<mission\-control index>\fP\fP
.RS 4
Send window to space. If \fI^\fP is present, follow focus.
.RE
.sp
\fBopacity=\fI<FLOAT_SEL>\fP\fP
.RS 4
Set window opacity.
.RE
.sp
\fBmanage=\fI<BOOL_SEL>\fP\fP
.RS 4
Window should be managed (tile vs float)
.RE
.sp
\fBsticky=\fI<BOOL_SEL>\fP\fP
.RS 4
Window appears on all spaces.
.RE
.sp
\fBtopmost=\fI<BOOL_SEL>\fP\fP
.RS 4
Window appears above other windows.
.RE
.sp
\fBborder=\fI<BOOL_SEL>\fP\fP
.RS 4
Window should draw border.
.RE
.sp
\fBnative\-fullscreen=\fI<BOOL_SEL>\fP\fP
.RS 4
Window should enter native macOS fullscreen mode.
.RE
.sp
\fBgrid=\fI<rows>:<cols>:<start\-x>:<start\-y>:<width>:<height>\fP\fP
.RS 4
Set window frame based on a self\-defined grid.
.RE
.SS "Signal"
.sp
A signal is a simple way for the user to react to some event that has been processed. Arguments are passed through environment variables.
.SS "General Syntax"
.sp
yabai \-m signal \fI<COMMAND>\fP
.SS "COMMAND"
.sp
\fB\-\-add event=\fI<EVENT>\fP action=\fI<ACTION>\fP [label=\fI<LABEL>\fP] [app=\fI<REGEX>\fP] [title=\fI<REGEX>\fP]\fP
.RS 4
Add an optionally labelled signal to execute an action after processing an event of the given type. Some signals can be specified to trigger based on the application name and/or window title.
.RE
.sp
\fB\-\-remove \fI<LABEL>\fP\fP
.RS 4
Remove an existing signal with the given label.
.RE
.SS "EVENT"
.sp
\fBapplication_launched\fP
.RS 4
Triggered when a new application is launched. Eligible for \fBapp=\fP filter. Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBapplication_terminated\fP
.RS 4
Triggered when an application is terminated. Eligible for \fBapp=\fP filter Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBapplication_front_switched\fP
.RS 4
Triggered when the front\-most application changes. Passes two arguments: $YABAI_PROCESS_ID, $YABAI_RECENT_PROCESS_ID
.RE
.sp
\fBapplication_activated\fP
.RS 4
Triggered when an application is activated. Eligible for \fBapp=\fP filter. Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBapplication_deactivated\fP
.RS 4
Triggered when an application is deactivated. Eligible for \fBapp=\fP filter. Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBapplication_visible\fP
.RS 4
Triggered when an application is unhidden. Eligible for \fBapp=\fP filter. Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBapplication_hidden\fP
.RS 4
Triggered when an application is hidden. Eligible for \fBapp=\fP filter. Passes one argument: $YABAI_PROCESS_ID
.RE
.sp
\fBwindow_created\fP
.RS 4
Triggered when a window is created. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_destroyed\fP
.RS 4
Triggered when a window is destroyed. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_focused\fP
.RS 4
Triggered when a window becomes the key\-window for its application. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_moved\fP
.RS 4
Triggered when a window changes position. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_resized\fP
.RS 4
Triggered when a window changes dimensions. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_minimized\fP
.RS 4
Triggered when a window has been minimized. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_deminimized\fP
.RS 4
Triggered when a window has been deminimized. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBwindow_title_changed\fP
.RS 4
Triggered when a window changes its title. Eligible for both \fBapp=\fP and \fBtitle=\fP filter. Passes one argument: $YABAI_WINDOW_ID
.RE
.sp
\fBspace_changed\fP
.RS 4
Triggered when the active space has changed. Passes two arguments: $YABAI_SPACE_ID, $YABAI_RECENT_SPACE_ID
.RE
.sp
\fBdisplay_added\fP
.RS 4
Triggered when a new display has been added. Passes one argument: $YABAI_DISPLAY_ID
.RE
.sp
\fBdisplay_removed\fP
.RS 4
Triggered when a display has been removed. Passes one argument: $YABAI_DISPLAY_ID
.RE
.sp
\fBdisplay_moved\fP
.RS 4
Triggered when a change has been made to display arrangement. Passes one argument: $YABAI_DISPLAY_ID
.RE
.sp
\fBdisplay_resized\fP
.RS 4
Triggered when a display has changed resolution. Passes one argument: $YABAI_DISPLAY_ID
.RE
.sp
\fBdisplay_changed\fP
.RS 4
Triggered when the active display has changed. Passes two arguments: $YABAI_DISPLAY_ID, $YABAI_RECENT_DISPLAY_ID
.RE
.sp
\fBmouse_down\fP
.RS 4
Triggered when a mouse button has been pressed. Passes two arguments: $YABAI_BUTTON, $YABAI_POINT
.RE
.sp
\fBmouse_up\fP
.RS 4
Triggered when a mouse button has been released. Passes two arguments: $YABAI_BUTTON, $YABAI_POINT
.RE
.sp
\fBmouse_dragged\fP
.RS 4
Triggered when the mouse is moved with one of its buttons pressed. Passes two arguments: $YABAI_BUTTON, $YABAI_POINT
.RE
.sp
\fBmouse_moved\fP
.RS 4
Triggered when the mouse is moved. Passes two arguments: $YABAI_BUTTON, $YABAI_POINT
.RE
.sp
\fBmission_control_enter\fP
.RS 4
Triggered when mission\-control activates.
.RE
.sp
\fBmission_control_check_for_exit\fP
.RS 4
Triggered periodically while mission\-control is active.
.RE
.sp
\fBmission_control_exit\fP
.RS 4
Triggered when mission\-control deactivates.
.RE
.sp
\fBdock_did_restart\fP
.RS 4
Triggered when Dock.app restarts.
.RE
.sp
\fBmenu_opened\fP
.RS 4
Triggered when a menu is opened.
.RE
.sp
\fBmenu_bar_hidden_changed\fP
.RS 4
Triggered when the macOS menubar \fIautohide\fP setting changes.
.RE
.sp
\fBdock_did_change_pref\fP
.RS 4
Triggered when the macOS Dock preferences changes.
.RE
.sp
\fBsystem_woke\fP
.RS 4
Triggered when macOS wakes from sleep.
.RE
.sp
\fBbar_refresh\fP
.RS 4
Triggered when the yabai status_bar is told to update.
.RE
.sp
\fBdaemon_message\fP
.RS 4
Triggered when yabai receives a message on its socket.
.RE
.SS "ACTION"
.sp
Arbitrary command executed through \fB/usr/bin/env sh \-c\fP
.SH "EXIT CODES"
.sp
If \fByabai\fP can\(cqt handle a message, it will return a non\-zero exit code.
.SH "AUTHOR"
.sp
Ãsmund Vikane <aasvi93 at gmail.com>